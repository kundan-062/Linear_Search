// time complexity: O(logN)
// space complexity: O(1)
import java.util.*;
import java.io.*;
public class BinarySearch
{
    public static int findBinarySearch(int arr[],int target)
    {
        int low=0,high=arr.length-1,result=-1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(arr[mid]==target)
            {
                return mid;
            }
            else if(arr[mid]<target)
            {
                low=mid+1;
            }
            else
            {
                high=mid-1;
            }
        }
        return 0;
    }
    public static void main(String [] agrs)
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter length of array: ");
        int n=sc.nextInt();
        System.out.println("Enter the number of array element:  ");
        int arr[]=new int[n];
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sc.nextInt();
        }
        System.out.println("Enter target element : ");
        int x=sc.nextInt();
        int result=findBinarySearch(arr,x);
         if(result==0)
        {
            System.out.println("Target element is note found in array..");
        }
        else
        {
            System.out.println("Target element's index is  "+result);
        }
       
    }
}
